<?xml version="1.0"?>
<launch>
  <arg name="model" default="$(find orca_description)/urdf/orca.urdf.xacro"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="world_name" default="$(find orca_description)/worlds/underwater.world"/>
  
  <!-- Load the URDF into the parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>
  
  <!-- Start Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>
  
  <!-- Spawn the robot model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param robot_description -model orca_rov -z 1.0"
        output="screen"/>
  
  <!-- Start robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  
  <!-- Load joint controller configurations from YAML file -->
  <rosparam file="$(find orca_control)/config/controllers.yaml" command="load"/>
  
  <!-- Load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="joint_state_controller"/>
</launch>
